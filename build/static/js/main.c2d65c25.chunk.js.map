{"version":3,"sources":["pages/Signup.js","pages/Login.js","pages/Plist.js","pages/Pinfo.js","pages/Program.js","pages/Deco.js","pages/Account.js","pages/Home.js","pages/TestButton.js","pages/AuthRoute.js","App.js","reportWebVitals.js","index.js"],"names":["Signup","Authenticated","className","method","action","type","name","placeholder","required","to","value","Login","from","pathname","console","log","id","path","render","props","Plist","this","link","src","iurl","alt","title","Component","Pinfo","Pdata","match","PinfoData","find","parameter","params","summary","Program","map","mapParameter","imgUrl","Deco","decoState","Account","accountInfo","useEffect","dir","username","password","href","Home","TestButton","history","useState","userState","setUserState","setDecoState","fetch","then","res","json","serverTest","catch","error","alert","programState","setProgramState","AuthRoute","rest","App","setAccountInfo","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c2d65c25.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'; \r\nimport './Signup.css'\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n\r\nfunction Signup ({Authenticated}){\r\n\r\n    return(\r\n        <div className='signup'>\r\n\r\n            <h2>가입하기</h2>\r\n\r\n            <form method='post' action='/api/signup'>\r\n                <input type='text' name='username' placeholder='아이디' required/>\r\n                <input type='password' name='password' placeholder='비밀번호' required/>\r\n                <input type='text' name='name' placeholder='이름' required/>\r\n                <input type='submit' name='signup' />\r\n            </form>\r\n\r\n            <Link to ='/login'>\r\n            <input type='button' value='가입 그만두기'/>\r\n            </Link>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default Signup","import React, { useState, useEffect } from 'react'; \r\nimport { Switch, Redirect, Route } from 'react-router-dom';\r\nimport './Login.css'\r\nimport Signup from '../pages/Signup'\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n\r\nfunction Login ({Authenticated}){\r\n\r\n  const { from } = { from: { pathname: \"/home\" } };\r\n\r\n\r\n    if (Authenticated) {\r\n        console.log('loginwindow auth 상태:', Authenticated);\r\n        console.log('***loginwindow auth인증 완료. 홈으로 이동하는것을 시도합니다.');\r\n        return <Redirect to={from} />;\r\n    } else{ \r\n      console.log('loginwindow auth 상태:',Authenticated);\r\n    }\r\n\r\n\r\n    return(\r\n\r\n        <div className='login'>\r\n\r\n          <h1> 로그인/로그아웃 페이지</h1>\r\n\r\n            <form method='post' action='/api/login'>\r\n\r\n              <input className='loginForms' type='text' required placeholder='아이디' id='id' name='username'/>\r\n              <input className='loginForms' type='password' required placeholder='비밀번호' id='pw' name='password'/>\r\n              <input className='loginForms' type='submit' id='submit'/>\r\n\r\n            </form>\r\n\r\n          <Link to={'/signup'}>\r\n              <input type='button' value='가입하기' id='linkbtn'/>\r\n          </Link>\r\n\r\n          <Switch>\r\n\r\n            <Route\r\n            path={'/signup'}\r\n            render={props => <Signup Authenticated={Authenticated} {...props}/>}\r\n            />\r\n            \r\n          </Switch>\r\n\r\n\r\n         \r\n        </div>\r\n\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default Login;\r\n\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react'; \r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nclass Plist extends Component{   \r\n\r\n\r\nrender(){   \r\nreturn(\r\n\r\n  <div id={this.props.id} className=\"Poster\" key={this.props.id}>\r\n      \r\n      <div className=\"posterImage\">\r\n              <Link to={this.props.link}>\r\n                <img src={this.props.iurl}  alt={this.props.title}/>\r\n              </Link>\r\n      </div>\r\n      \r\n  </div>\r\n\r\n);\r\n}\r\n}\r\n\r\nexport default Plist;","import React, { Component, useEffect, useState } from 'react'; \r\nimport { Link } from 'react-router-dom';\r\nimport './Pinfo.css'\r\n\r\n\r\nfunction Pinfo ({Pdata,match}){\r\n\r\n\r\n\r\n    \r\n    const PinfoData = Pdata.find(\r\n        function(parameter) {\r\n             return parameter.title === match.params.title //match params 는 주소창에 있는 title 을 가져온다. 결국 match params title 과 동일한 title을 가진 parameter가 program으로 선정된다.\r\n            });\r\n\r\n    return(\r\n\r\n        <div className='pInfo'>\r\n\r\n            <h1>프로그램 정보</h1>\r\n\r\n        <div>\r\n            <span id='info1'>프로그램 제목 : </span> \r\n            <span id='info2'>{PinfoData.title}</span>\r\n        </div>\r\n        <div>\r\n            <span id='info3'>프로그램 요약 : </span> \r\n            <span id='info4'>{PinfoData.summary}</span>\r\n        </div>\r\n\r\n      </div>\r\n\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default Pinfo;","import React, { Component, useState, useEffect } from 'react'; \r\nimport Plist from '../pages/Plist.js';\r\nimport Pinfo from '../pages/Pinfo.js';\r\nimport './Program.css';\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport { Route, Switch } from \"react-router-dom\";\r\n\r\n\r\n\r\n\r\n\r\nfunction Program ({match, Pdata}){\r\n\r\n    return(         \r\n      <div className=\"mainPage\">     \r\n        <h1>프로그램 목록 페이지</h1>\r\n        <div className=\"Program\">\r\n  \r\n                {Pdata.map(\r\n                  function(mapParameter){  \r\n                    return(\r\n                      <Plist\r\n                              id={mapParameter.title +'_id_'+ mapParameter.id} \r\n                              link={match.path+'/info/'+mapParameter.title} \r\n                              iurl={mapParameter.imgUrl}  \r\n                              title={mapParameter.title} \r\n                              key={mapParameter.title +'_key_'+ mapParameter.id}\r\n                      > \r\n                      </Plist> \r\n                    );\r\n                  } \r\n                ) \r\n                } \r\n\r\n\r\n                <div>\r\n             \r\n                    \r\n                    <Route\r\n                      path={match.path+'/info/:title'}\r\n                      render={props => <Pinfo Pdata={Pdata}{...props}/>}\r\n                      />\r\n\r\n              \r\n       \r\n                  \r\n                </div>\r\n\r\n        </div>\r\n\r\n        \r\n      </div>\r\n    );\r\n  }\r\n\r\n\r\n\r\nexport default Program; ","import React, { Component, useEffect, useState } from 'react'; \r\nimport { Link } from 'react-router-dom';\r\nimport './Deco.css'\r\n\r\n\r\nfunction Deco ({decoState}){\r\n\r\n \r\n\r\n\r\n\r\n    return(\r\n\r\n        <div className='Deco'>\r\n\r\n            <h1>리액트의 틀과 서버의 정보 결합</h1>\r\n\r\n        <div>\r\n            <span id='DecoLabel'>서버에서 받아온 정보 : </span> \r\n            <span id='DecoLabel2'>{decoState}</span>\r\n        </div>\r\n\r\n\r\n      </div>\r\n\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default Deco;\r\n\r\n\r\n\r\n/*\r\n\r\n useEffect(()=>{\r\n\r\n        fetch('/api/deco',{\r\n            headers : {\r\n                'Content-Type' : 'application/json',\r\n                'Accept' : 'application/json'\r\n            },\r\n        })\r\n        .then(res=>res.json())\r\n        .then(res=>setDecoState(res.serverTest))\r\n        .catch(error=> alert('error'))\r\n    \r\n      },[])\r\n\r\n\r\n\r\n      */","import React, { useState, useEffect } from 'react'; \r\nimport './Account.css'\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n\r\nfunction Account ({accountInfo}){\r\n\r\n      useEffect(()=>{\r\n        console.log('유저정보를 불러옵니다...');\r\n        console.dir(accountInfo);\r\n      },[accountInfo])\r\n\r\n    return(\r\n        <div className='account'>\r\n\r\n            <p>유저 이름 : {accountInfo.name}</p>\r\n            <p>유저 아이디 : {accountInfo.username}</p>\r\n            <p>유저 비밀번호 : {accountInfo.password}</p>\r\n\r\n            <a href='/api/logout'>\r\n            <input\r\n                type='button'\r\n                name='Logout'\r\n                value='로그아웃'\r\n            />\r\n            </a>\r\n\r\n\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Account","import './Home.css';\r\n\r\nfunction Home(){\r\n\r\n    return(\r\n        <div className='home'>\r\n            <h1> 환영합니다 </h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","import React, { useState, useEffect } from 'react'; \r\nimport { Route, Switch, BrowserRouter as Router, Link } from 'react-router-dom';\r\nimport './TestButton.css'\r\nimport Program from '../pages/Program'\r\nimport Deco from '../pages/Deco'\r\nimport Account from '../pages/Account'\r\nimport Home from '../pages/Home'\r\n\r\n\r\nfunction TestButton ({history, accountInfo, Authenticated}){\r\n\r\n\r\n    //accountInfo 받아서 userState 설정\r\n    const [userState, setUserState] = useState('없음')\r\n    \r\n        useEffect(()=>{\r\n            if(Authenticated===false){\r\n                setUserState('없음');\r\n            }else{\r\n                setUserState(accountInfo.name);\r\n            }\r\n        },[accountInfo, Authenticated])\r\n\r\n  \r\n          //deco 용 fetch 와 state\r\n          const [decoState, setDecoState] =useState('')\r\n  \r\n          useEffect(()=>{\r\n              fetch('/api/deco')\r\n              .then(res=>res.json())\r\n              .then(res=>setDecoState(res.serverTest))\r\n              .catch(error=> alert('error'))\r\n          },[])\r\n  \r\n  \r\n          //프로그램 목록\r\n          const [programState, setProgramState] = useState([])\r\n  \r\n          useEffect(()=>{\r\n              fetch('/api/program')\r\n              .then(res=>res.json())\r\n              .then(res=>setProgramState(res))\r\n              \r\n              .catch(error=> alert('error'))\r\n              },[])\r\n\r\n\r\n\r\n    return(\r\n\r\n\r\n        <div>\r\n\r\n\r\n            <div className='TestButton'>\r\n\r\n                           \r\n\r\n                <h1>홈페이지</h1>\r\n\r\n                <h2>로그인된 사용자 : {userState}</h2>\r\n\r\n                <a href='/api/greeting'>\r\n                    <input type='button' value='api/greeting 으로'/>\r\n                </a>\r\n\r\n                <Link to={'/browse'}>\r\n                    <input type='button' value='프로그램목록보기'/>\r\n                </Link>\r\n\r\n                <Link to={'/deco'}>\r\n                    <input type='button' value='리액트틀과 서버정보결합 테스트'/>\r\n                </Link>\r\n\r\n                <Link to={'/account'}>\r\n                    <input type='button' value='사용자 정보'/>\r\n                </Link>\r\n\r\n        </div>\r\n\r\n\r\n\r\n                <Switch>\r\n\r\n                        <Route\r\n                        path={'/home'}\r\n                        render={props => <Home {...props}/>}\r\n                        />\r\n\r\n\r\n                        <Route\r\n                        path={'/browse'}\r\n                        render={props => <Program Pdata={programState} {...props}/>}\r\n                        />\r\n\r\n                        <Route\r\n                        path={'/deco'}\r\n                        render={props => <Deco decoState={decoState} {...props}/>}\r\n                        />\r\n\r\n                        <Route\r\n                        path={'/account'}\r\n                        render={props => <Account accountInfo={accountInfo} {...props}/>}\r\n                        />\r\n\r\n                </Switch>\r\n\r\n\r\n      </div>\r\n    )\r\n\r\n}\r\n\r\nexport default TestButton;","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport TestButton from '../pages/TestButton.js';\r\n\r\n\r\nfunction AuthRoute({ Authenticated, render, ...rest }) {\r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={(props) =>\r\n            {  if(Authenticated){\r\n                console.log('AuthRoute 전달받은 auth인증 확인, auth상태:',Authenticated);\r\n                console.log('AuthRoute render 진행, 컴포넌트를 렌더 합니다.');\r\n                return render(props);\r\n              }else{\r\n                console.log('AuthRoute 전달받은 auth인증 없음 :',Authenticated,'. =>login페이지로 리다이렉트');\r\n                return <Redirect to={{ pathname: '/login'}}/>;\r\n              }\r\n\r\n\r\n            }\r\n\r\n\r\n        }\r\n      />\r\n    ); \r\n  }\r\n  \r\n  \r\n  \r\n  export default AuthRoute;","import './App.css';\nimport React, { useState, useEffect } from 'react'; \nimport { Route, Switch, BrowserRouter as Router} from 'react-router-dom';\n\nimport Login from './pages/Login'\nimport TestButton from './pages/TestButton'\nimport AuthRoute from './pages/AuthRoute'\n\n\nfunction App() {\n\n\n\n  //유저 로그인 정보 fetch 와 state\n  const [accountInfo, setAccountInfo]=useState(null)\n\n  let Authenticated = accountInfo != null;\n      console.log(Authenticated);\n      console.log(accountInfo);\n\n  useEffect(()=>{\n      fetch('/api/account')\n      .then(res=>res.json())\n      .then(res=>setAccountInfo(res))\n      \n      .catch(error=> setAccountInfo(null))\n    },[])\n\n\n\n\n  return (\n\n\n    <Router>\n      \n      <Switch>\n\n\n\n          <Route\n            path={['/login','/signup']}\n            render={props => <Login Authenticated={Authenticated} {...props}/>}\n            />\n\n            <AuthRoute\n            Authenticated={Authenticated}\n            path={'/'}\n            render={props=> <TestButton Authenticated={Authenticated} accountInfo={accountInfo}  {...props}/>}\n            />\n\n\n\n      </Switch>\n\n    </Router>\n  );\n}\n\nexport default App;\n\n\n\n/*\n\n //유저 로그인 정보 fetch 와 state\n  const [accountInfo, setAccountInfo]=useState([])\n\n  useEffect(()=>{\n      fetch('/api/account')\n      .then(res=>res.json())\n      .then(res=>setAccountInfo(res))\n      \n      .catch(error=> setAccountInfo({username:'없음',password:'없음',name:'없음'}))\n    },[])\n\n\n  //deco 용 fetch 와 state\n  const [decoState, setDecoState] =useState('')\n\n  useEffect(()=>{\n      fetch('/api/deco')\n      .then(res=>res.json())\n      .then(res=>setDecoState(res.serverTest))\n      .catch(error=> alert('error'))\n    },[])\n  \n\n    //프로그램 목록\n    const [programState, setProgramState] = useState([])\n\n    useEffect(()=>{\n        fetch('/api/program')\n        .then(res=>res.json())\n        .then(res=>setProgramState(res))\n        \n        .catch(error=> alert('error'))\n      },[])\n\n\n\n  return (\n\n\n    <Router>\n      \n      <Switch>\n\n       <Route\n        exact path={'/'}\n        render={props=> <TestButton accountInfo={accountInfo} {...props}/>}\n        />\n\n        <Route\n          path={'/login'}\n          render={props => <Login {...props}/>}\n          />\n\n        <Route\n          path={'/logout'}\n          render={props => <Logout {...props}/>}\n          />\n\n        <Route\n          path={'/browse'}\n          render={props => <Program Pdata={programState} {...props}/>}\n          />\n\n        <Route\n          path={'/deco'}\n          render={props => <Deco decoState={decoState} {...props}/>}\n          />\n\n          \n        <Route\n          path={'/account'}\n          render={props => <Account accountInfo={accountInfo} {...props}/>}\n          />\n\n      </Switch>\n\n    </Router>\n\n    */","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}